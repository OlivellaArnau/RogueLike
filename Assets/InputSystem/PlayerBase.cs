//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.11.2
//     from Assets/InputSystem/PlayerBase.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerBase: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerBase()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerBase"",
    ""maps"": [
        {
            ""name"": ""Player_Base"",
            ""id"": ""eca67588-33b8-46da-b027-17cb050dff1d"",
            ""actions"": [
                {
                    ""name"": ""Move"",
                    ""type"": ""Value"",
                    ""id"": ""b7b7f860-c1a9-49d2-8d75-c7ded5c2a408"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Shoot"",
                    ""type"": ""Button"",
                    ""id"": ""cfe34c1c-4220-495e-884e-8dc9b3dd83e1"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Attack"",
                    ""type"": ""Button"",
                    ""id"": ""4726dc74-ee70-4218-800a-33f4d9c54f23"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Dash"",
                    ""type"": ""Button"",
                    ""id"": ""34fc7dee-21db-4313-b324-b9fed2ff1012"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Look"",
                    ""type"": ""Value"",
                    ""id"": ""a78171dd-f1be-48e1-99cd-bd5a36c58a42"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""ChangeWeapon"",
                    ""type"": ""Button"",
                    ""id"": ""5a809036-6c86-4e40-b5ec-645afc4d8581"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Run"",
                    ""type"": ""Button"",
                    ""id"": ""9590ff69-5575-4c71-bb56-3d6e439482e0"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""BuyWeapon"",
                    ""type"": ""Button"",
                    ""id"": ""5f26819c-5e21-4f11-b4b7-4bf87190be37"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""a2c4e063-d704-4c5e-92a5-5d9998ccc971"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Attack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ff9129e6-8c14-49c6-b78c-ec417b6301c5"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Dash"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""2e484a67-b883-4d91-83b9-a984503899fe"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""c5826c17-316f-44c9-8788-8ec1d84f9c17"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""4b994615-4f60-4e35-82c0-9a4c872cffeb"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""3c647a0b-dd9e-455f-8b55-50f0044f6baf"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""ce61130f-8077-402e-a672-9504f665f399"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""fcfad47f-0b59-4632-9a56-5196b8ebbcf5"",
                    ""path"": ""<Mouse>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7acfb581-5cbc-45f4-8950-79a4f8599d8b"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ChangeWeapon"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e6f1b67d-35cd-41b1-baab-0acd2f9da782"",
                    ""path"": ""<Keyboard>/shift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Run"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6da0f2d2-230f-4c6e-b368-5245b26cb0f5"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Shoot"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d54805f9-41d5-43f4-bbe7-f4f8c26d5d76"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""BuyWeapon"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Player_Base
        m_Player_Base = asset.FindActionMap("Player_Base", throwIfNotFound: true);
        m_Player_Base_Move = m_Player_Base.FindAction("Move", throwIfNotFound: true);
        m_Player_Base_Shoot = m_Player_Base.FindAction("Shoot", throwIfNotFound: true);
        m_Player_Base_Attack = m_Player_Base.FindAction("Attack", throwIfNotFound: true);
        m_Player_Base_Dash = m_Player_Base.FindAction("Dash", throwIfNotFound: true);
        m_Player_Base_Look = m_Player_Base.FindAction("Look", throwIfNotFound: true);
        m_Player_Base_ChangeWeapon = m_Player_Base.FindAction("ChangeWeapon", throwIfNotFound: true);
        m_Player_Base_Run = m_Player_Base.FindAction("Run", throwIfNotFound: true);
        m_Player_Base_BuyWeapon = m_Player_Base.FindAction("BuyWeapon", throwIfNotFound: true);
    }

    ~@PlayerBase()
    {
        UnityEngine.Debug.Assert(!m_Player_Base.enabled, "This will cause a leak and performance issues, PlayerBase.Player_Base.Disable() has not been called.");
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Player_Base
    private readonly InputActionMap m_Player_Base;
    private List<IPlayer_BaseActions> m_Player_BaseActionsCallbackInterfaces = new List<IPlayer_BaseActions>();
    private readonly InputAction m_Player_Base_Move;
    private readonly InputAction m_Player_Base_Shoot;
    private readonly InputAction m_Player_Base_Attack;
    private readonly InputAction m_Player_Base_Dash;
    private readonly InputAction m_Player_Base_Look;
    private readonly InputAction m_Player_Base_ChangeWeapon;
    private readonly InputAction m_Player_Base_Run;
    private readonly InputAction m_Player_Base_BuyWeapon;
    public struct Player_BaseActions
    {
        private @PlayerBase m_Wrapper;
        public Player_BaseActions(@PlayerBase wrapper) { m_Wrapper = wrapper; }
        public InputAction @Move => m_Wrapper.m_Player_Base_Move;
        public InputAction @Shoot => m_Wrapper.m_Player_Base_Shoot;
        public InputAction @Attack => m_Wrapper.m_Player_Base_Attack;
        public InputAction @Dash => m_Wrapper.m_Player_Base_Dash;
        public InputAction @Look => m_Wrapper.m_Player_Base_Look;
        public InputAction @ChangeWeapon => m_Wrapper.m_Player_Base_ChangeWeapon;
        public InputAction @Run => m_Wrapper.m_Player_Base_Run;
        public InputAction @BuyWeapon => m_Wrapper.m_Player_Base_BuyWeapon;
        public InputActionMap Get() { return m_Wrapper.m_Player_Base; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(Player_BaseActions set) { return set.Get(); }
        public void AddCallbacks(IPlayer_BaseActions instance)
        {
            if (instance == null || m_Wrapper.m_Player_BaseActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_Player_BaseActionsCallbackInterfaces.Add(instance);
            @Move.started += instance.OnMove;
            @Move.performed += instance.OnMove;
            @Move.canceled += instance.OnMove;
            @Shoot.started += instance.OnShoot;
            @Shoot.performed += instance.OnShoot;
            @Shoot.canceled += instance.OnShoot;
            @Attack.started += instance.OnAttack;
            @Attack.performed += instance.OnAttack;
            @Attack.canceled += instance.OnAttack;
            @Dash.started += instance.OnDash;
            @Dash.performed += instance.OnDash;
            @Dash.canceled += instance.OnDash;
            @Look.started += instance.OnLook;
            @Look.performed += instance.OnLook;
            @Look.canceled += instance.OnLook;
            @ChangeWeapon.started += instance.OnChangeWeapon;
            @ChangeWeapon.performed += instance.OnChangeWeapon;
            @ChangeWeapon.canceled += instance.OnChangeWeapon;
            @Run.started += instance.OnRun;
            @Run.performed += instance.OnRun;
            @Run.canceled += instance.OnRun;
            @BuyWeapon.started += instance.OnBuyWeapon;
            @BuyWeapon.performed += instance.OnBuyWeapon;
            @BuyWeapon.canceled += instance.OnBuyWeapon;
        }

        private void UnregisterCallbacks(IPlayer_BaseActions instance)
        {
            @Move.started -= instance.OnMove;
            @Move.performed -= instance.OnMove;
            @Move.canceled -= instance.OnMove;
            @Shoot.started -= instance.OnShoot;
            @Shoot.performed -= instance.OnShoot;
            @Shoot.canceled -= instance.OnShoot;
            @Attack.started -= instance.OnAttack;
            @Attack.performed -= instance.OnAttack;
            @Attack.canceled -= instance.OnAttack;
            @Dash.started -= instance.OnDash;
            @Dash.performed -= instance.OnDash;
            @Dash.canceled -= instance.OnDash;
            @Look.started -= instance.OnLook;
            @Look.performed -= instance.OnLook;
            @Look.canceled -= instance.OnLook;
            @ChangeWeapon.started -= instance.OnChangeWeapon;
            @ChangeWeapon.performed -= instance.OnChangeWeapon;
            @ChangeWeapon.canceled -= instance.OnChangeWeapon;
            @Run.started -= instance.OnRun;
            @Run.performed -= instance.OnRun;
            @Run.canceled -= instance.OnRun;
            @BuyWeapon.started -= instance.OnBuyWeapon;
            @BuyWeapon.performed -= instance.OnBuyWeapon;
            @BuyWeapon.canceled -= instance.OnBuyWeapon;
        }

        public void RemoveCallbacks(IPlayer_BaseActions instance)
        {
            if (m_Wrapper.m_Player_BaseActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IPlayer_BaseActions instance)
        {
            foreach (var item in m_Wrapper.m_Player_BaseActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_Player_BaseActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public Player_BaseActions @Player_Base => new Player_BaseActions(this);
    public interface IPlayer_BaseActions
    {
        void OnMove(InputAction.CallbackContext context);
        void OnShoot(InputAction.CallbackContext context);
        void OnAttack(InputAction.CallbackContext context);
        void OnDash(InputAction.CallbackContext context);
        void OnLook(InputAction.CallbackContext context);
        void OnChangeWeapon(InputAction.CallbackContext context);
        void OnRun(InputAction.CallbackContext context);
        void OnBuyWeapon(InputAction.CallbackContext context);
    }
}
